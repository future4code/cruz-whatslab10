{"version":3,"sources":["Mensagem.js","App.js","reportWebVitals.js","index.js"],"names":["Mensagem","className","this","props","nome","texto","React","Component","App","state","mensagens","valorInputNome","valorInputTexto","onChangeInputNome","event","setState","target","value","onChangeInputTexto","addMensagem","novaMensagem","novoMensagens","onKeyDown","key","preventDefault","stopPropagation","map","mensagem","onChange","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAmBeA,E,4JAdX,WAEI,OACI,sBAAKC,UAAW,cAAhB,UACI,+BACI,4BAAIC,KAAKC,MAAMC,SAEnB,qCAAQF,KAAKC,MAAME,gB,GATZC,IAAMC,WCgFdC,E,4MA3EbC,MAAO,CACLC,UAAY,CACV,CACEN,KAAK,YACLC,MAAM,oCAGVM,eAAgB,GAChBC,gBAAiB,I,EAGnBC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEJ,eAAgBG,EAAME,OAAOC,S,EAG/CC,mBAAqB,SAACJ,GACpB,EAAKC,SAAS,CAAEH,gBAAiBE,EAAME,OAAOC,S,EAGhDE,YAAc,SAACL,GACb,IAAMM,EAAe,CACnBhB,KAAM,EAAKK,MAAME,eAAgB,IACjCN,MAAO,EAAKI,MAAMG,iBAEdS,EAAa,sBAAO,EAAKZ,MAAMC,WAAlB,CAA6BU,IAEhD,EAAKL,SAAS,CAAEL,UAAWW,IAE3B,EAAKZ,MAAMG,gBAAkB,I,EAG/BU,UAAY,SAACR,GACO,UAAdA,EAAMS,MACRT,EAAMU,iBACNV,EAAMW,kBACN,EAAKN,gB,4CAKT,WAEE,OACE,sBAAKlB,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACKC,KAAKO,MAAMC,UAAUgB,KAAI,SAACC,GACvB,OAAO,qBAAK1B,UAAU,aAAf,SACH,cAAC,EAAD,CACEG,KAAMuB,EAASvB,KACfC,MAAOsB,EAAStB,eAK9B,sBAAKJ,UAAU,iBAAf,UACE,uBACEA,UAAU,IACVgB,MAAOf,KAAKO,MAAME,eAClBiB,SAAU1B,KAAKW,kBACfgB,YAAa,SAEf,uBACE5B,UAAU,IACVgB,MAAOf,KAAKO,MAAMG,gBAClBgB,SAAU1B,KAAKgB,mBACfW,YAAa,WACbP,UAAWpB,KAAKoB,YAElB,wBAAQQ,QAAS5B,KAAKiB,YAAtB,iC,GAxEQb,IAAMC,WCQTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6da3628.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Mensagem.css'\r\n\r\nclass Mensagem extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className={'.msg-baloon'}>\r\n                <span>\r\n                    <b>{this.props.nome}</b>\r\n                </span>\r\n                <span> {this.props.texto}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Mensagem","import React from 'react';\nimport './App.css';\nimport Mensagem from './Mensagem'\n\nclass App extends React.Component {\n\n  // mensagens = [{}]\n\n  state ={\n    mensagens : [ \n      {\n        nome:'Astrobot:', \n        texto:'Boas vindas. Deixe sua mensagem'\n      } \n    ],\n    valorInputNome: '',\n    valorInputTexto: ''\n  }\n\n  onChangeInputNome = (event) =>{\n    this.setState({ valorInputNome: event.target.value})\n  }\n\n  onChangeInputTexto = (event) =>{\n    this.setState({ valorInputTexto: event.target.value})\n  }\n\n  addMensagem = (event) => {\n    const novaMensagem = {\n      nome: this.state.valorInputNome +':',\n      texto: this.state.valorInputTexto,\n    }\n    const novoMensagens = [...this.state.mensagens, novaMensagem]\n\n    this.setState({ mensagens: novoMensagens })\n\n    this.state.valorInputTexto = ''\n  }\n\n  onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.addMensagem();\n    }\n  }\n\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <div className=\"msg-container\">\n            {this.state.mensagens.map((mensagem) => {\n                return <div className='msg-baloon'>\n                    <Mensagem\n                      nome={mensagem.nome}\n                      texto={mensagem.texto}\n                    />\n                </div>\n            })}\n          </div>\n        <div className=\"form-container\">\n          <input\n            className='a'\n            value={this.state.valorInputNome}\n            onChange={this.onChangeInputNome}\n            placeholder={'Nome'}\n          /> \n          <input\n            className=\"b\"\n            value={this.state.valorInputTexto}\n            onChange={this.onChangeInputTexto}\n            placeholder={'Mensagem'}\n            onKeyDown={this.onKeyDown}\n          /> \n          <button onClick={this.addMensagem}> Mandar! </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}